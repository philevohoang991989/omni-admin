{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Downloads/omni-admin-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Downloads/omni-admin-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport stringUtils from \"./StringUtils\";\nimport storage from \"./Storage\";\n\nvar axios = require(\"axios\");\n\nvar doGet = axios[\"get\"];\nvar doPost = axios[\"post\"];\nvar doPut = axios[\"put\"];\nvar doDelete = axios[\"delete\"];\nvar baseUrl = \"\";\n\nvar redirectToHome = function redirectToHome(error) {\n  if (error.response && error.response.data) {\n    if (error.response.data.errorCode === \"ACCESS_TOKEN_INVALID\") {\n      storage.setAccessToken(undefined); //redirect to home for login\n\n      window.location.href = \"/\";\n    }\n  }\n};\n\nvar Requester =\n/*#__PURE__*/\nfunction () {\n  function Requester() {\n    _classCallCheck(this, Requester);\n\n    var accessToken = storage.getAccessToken();\n\n    if (accessToken) {\n      axios[\"defaults\"].headers.common = {\n        Authorization: \"Bearer \".concat(accessToken)\n      };\n    }\n  }\n\n  _createClass(Requester, [{\n    key: \"getUrl\",\n    value: function getUrl(path) {\n      if (stringUtils.isUrl(path)) {\n        return path;\n      }\n\n      return baseUrl + path;\n    }\n  }, {\n    key: \"search\",\n    value: function search(path, params) {\n      var url = this.getUrl(path);\n      return new Promise(function (resolve, reject) {\n        doGet(url, {\n          params: params\n        }).then(function (response) {\n          resolve(response.data || {});\n        }).catch(function (error) {\n          console.error(error);\n          reject(error);\n        }).then(function () {\n          // always executed\n          console.log(\">>> GET \" + url);\n        });\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get(path, params) {\n      var url = this.getUrl(path);\n      return new Promise(function (resolve, reject) {\n        doGet(url, {\n          params: params\n        }).then(function (resp) {\n          if (resp && resp[\"status\"] === 200) {\n            resolve(resp[\"data\"]);\n          } else {\n            reject(resp);\n          }\n        }).catch(function (error) {\n          redirectToHome(error);\n          console.error(\"error\", error);\n          reject(error);\n        }).then(function () {\n          // always executed\n          console.log(\">>> GET \" + url);\n        });\n      });\n    }\n  }, {\n    key: \"post\",\n    value: function post(path, params) {\n      var url = this.getUrl(path);\n      return new Promise(function (resolve, reject) {\n        doPost(url, params).then(function (response) {\n          console.log(response);\n          resolve(response);\n        }).catch(function (error) {\n          console.error(error);\n          redirectToHome(error);\n          reject(error);\n        }).then(function () {\n          // always executed\n          console.log(\">>> POST \" + url);\n        });\n      });\n    }\n  }, {\n    key: \"put\",\n    value: function put(path, params) {\n      var url = this.getUrl(path);\n      return new Promise(function (resolve, reject) {\n        doPut(url, params).then(function (response) {\n          console.log(response);\n          resolve(response);\n        }).catch(function (error) {\n          console.error(error);\n          redirectToHome(error);\n          reject(error);\n        }).then(function () {\n          // always executed\n          console.log(\">>> PUT \" + url);\n        });\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(path, params) {\n      var url = this.getUrl(path);\n      return new Promise(function (resolve, reject) {\n        doDelete(url, params).then(function (response) {\n          console.log(response);\n          resolve(response);\n        }).catch(function (error) {\n          console.error(error);\n          redirectToHome(error);\n          reject(error);\n        }).then(function () {\n          // always executed\n          console.log(\">>> DELETE \" + url);\n        });\n      });\n    }\n  }]);\n\n  return Requester;\n}();\n\nvar requester = new Requester();\nexport default requester;","map":{"version":3,"sources":["/Users/admin/Downloads/omni-admin-master/src/Utils/Requester.js"],"names":["stringUtils","storage","axios","require","doGet","doPost","doPut","doDelete","baseUrl","redirectToHome","error","response","data","errorCode","setAccessToken","undefined","window","location","href","Requester","accessToken","getAccessToken","headers","common","Authorization","path","isUrl","params","url","getUrl","Promise","resolve","reject","then","catch","console","log","resp","requester"],"mappings":"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","sourcesContent":["import stringUtils from \"./StringUtils\";\nimport storage from \"./Storage\";\n\nconst axios = require(\"axios\");\nconst doGet = axios[\"get\"];\nconst doPost = axios[\"post\"];\nconst doPut = axios[\"put\"];\nconst doDelete = axios[\"delete\"];\nconst baseUrl = \"\";\n\nconst redirectToHome = error => {\n  if (error.response && error.response.data) {\n    if (error.response.data.errorCode === \"ACCESS_TOKEN_INVALID\") {\n      storage.setAccessToken(undefined);\n      //redirect to home for login\n      window.location.href = \"/\";\n    }\n  }\n};\n\nclass Requester {\n  constructor() {\n    const accessToken = storage.getAccessToken();\n    if (accessToken) {\n      axios[\"defaults\"].headers.common = {\n        Authorization: `Bearer ${accessToken}`\n      };\n    }\n  }\n\n  getUrl(path) {\n    if (stringUtils.isUrl(path)) {\n      return path;\n    }\n    return baseUrl + path;\n  }\n\n  search(path, params) {\n    const url = this.getUrl(path);\n    return new Promise((resolve, reject) => {\n      doGet(url, {\n        params: params\n      })\n        .then(function(response) {\n          resolve(response.data || {});\n        })\n        .catch(function(error) {\n          console.error(error);\n          reject(error);\n        })\n        .then(function() {\n          // always executed\n          console.log(\">>> GET \" + url);\n        });\n    });\n  }\n\n  get(path, params) {\n    const url = this.getUrl(path);\n    return new Promise((resolve, reject) => {\n      doGet(url, {\n        params: params\n      })\n        .then(function(resp) {\n          if (resp && resp[\"status\"] === 200) {\n            resolve(resp[\"data\"]);\n          } else {\n            reject(resp);\n          }\n        })\n        .catch(function(error) {\n          redirectToHome(error);\n          console.error(\"error\", error);\n          reject(error);\n        })\n        .then(function() {\n          // always executed\n          console.log(\">>> GET \" + url);\n        });\n    });\n  }\n\n  post(path, params) {\n    const url = this.getUrl(path);\n    return new Promise((resolve, reject) => {\n      doPost(url, params)\n        .then(function(response) {\n          console.log(response);\n          resolve(response);\n        })\n        .catch(function(error) {\n          console.error(error);\n          redirectToHome(error);\n          reject(error);\n        })\n        .then(function() {\n          // always executed\n          console.log(\">>> POST \" + url);\n        });\n    });\n  }\n\n  put(path, params) {\n    const url = this.getUrl(path);\n    return new Promise((resolve, reject) => {\n      doPut(url, params)\n        .then(function(response) {\n          console.log(response);\n          resolve(response);\n        })\n        .catch(function(error) {\n          console.error(error);\n          redirectToHome(error);\n          reject(error);\n        })\n        .then(function() {\n          // always executed\n          console.log(\">>> PUT \" + url);\n        });\n    });\n  }\n\n  delete(path, params) {\n    const url = this.getUrl(path);\n    return new Promise((resolve, reject) => {\n      doDelete(url, params)\n        .then(function(response) {\n          console.log(response);\n          resolve(response);\n        })\n        .catch(function(error) {\n          console.error(error);\n          redirectToHome(error);\n          reject(error);\n        })\n        .then(function() {\n          // always executed\n          console.log(\">>> DELETE \" + url);\n        });\n    });\n  }\n}\n\nconst requester = new Requester();\n\nexport default requester;\n"]},"metadata":{},"sourceType":"module"}