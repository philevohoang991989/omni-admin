{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Downloads/omni-admin-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Downloads/omni-admin-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Downloads/omni-admin-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Downloads/omni-admin-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Downloads/omni-admin-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Downloads/omni-admin-master/src/Views/Accounts/Edit.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from \"@material-ui/core/es/Button/Button\";\nimport accountsService from '../../Services/AccountsService';\nimport { Redirect } from \"react-router-dom\";\nimport OcbLoading from \"../Core/OcbLoading\";\nimport OcbSelect from \"../Core/OcbSelect\";\n\nvar styles = function styles() {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: \"100%\",\n      flexDirection: \"column\",\n      margin: \"auto\"\n    },\n    textField: {},\n    alignRight: {\n      textAlign: \"right\",\n      justifyContent: \"flex-end\"\n    },\n    form: {\n      overflow: \"visible\"\n    }\n  };\n};\n\nvar Edit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Edit, _React$Component);\n\n  function Edit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Edit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Edit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      redirect: false,\n      account: {\n        id: '',\n        userName: '',\n        password: ''\n      },\n      loading: false\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        var account = _this.state.account;\n        account[name] = event.target.value;\n\n        _this.setState({\n          account: account\n        });\n      };\n    };\n\n    _this.redirect = function (path) {\n      _this.setState({\n        redirect: path\n      });\n    };\n\n    _this.submit = function () {\n      if (_this.validate()) {\n        _this.setState({\n          loading: true\n        });\n\n        accountsService.save(_this.state.account).then(function (resp) {\n          _this.redirect('/accounts');\n        }).catch(function (error) {\n          console.error(error);\n        }).then(function () {\n          _this.setState({\n            loading: false\n          });\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Edit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var id = this.props.match.params.id;\n      accountsService.get(id).then(function (account) {\n        account['id'] = id;\n\n        _this2.setState({\n          account: account\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      return this.state.account.userName && this.state.account.password;\n    }\n  }, {\n    key: \"renderRedirect\",\n    value: function renderRedirect() {\n      if (this.state.redirect !== false) {\n        return React.createElement(Redirect, {\n          to: this.state.redirect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      if (this.state.loading) {\n        return React.createElement(OcbLoading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.renderLoading(), this.renderRedirect(), React.createElement(Card, {\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        title: \"C\\u1EADp Nh\\u1EADp T\\xE0i Kho\\u1EA3n\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"userName\",\n        label: \"T\\xEAn \\u0111\\u0103ng nh\\u1EADp\",\n        placeholder: \"Nh\\xE2p t\\xEAn \\u0111\\u0103ng nh\\u1EADp...\",\n        className: classes.textField,\n        value: this.state.account.userName || '',\n        onChange: this.handleChange('userName'),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        name: \"password\",\n        label: \"M\\u1EADt kh\\u1EA9u\",\n        placeholder: \"Nh\\u1EADp m\\u1EADt kh\\u1EA9u...\",\n        className: classes.textField,\n        value: this.state.account.password || '',\n        onChange: this.handleChange('password'),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(OcbSelect, {\n        label: \"Quy\\u1EC1n h\\u1EA1n\",\n        placeholder: \"Ch\\u1ECDn quy\\u1EC1n h\\u1EA1n...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }))), React.createElement(CardActions, {\n        className: classes.alignRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        href: \"/accounts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"H\\u1EE7y\"), React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: this.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"L\\u01B0u\"))));\n    }\n  }]);\n\n  return Edit;\n}(React.Component);\n\nEdit.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Edit);","map":{"version":3,"sources":["/Users/admin/Downloads/omni-admin-master/src/Views/Accounts/Edit.js"],"names":["React","PropTypes","withStyles","TextField","Card","CardHeader","CardContent","CardActions","Button","accountsService","Redirect","OcbLoading","OcbSelect","styles","container","display","flexWrap","width","flexDirection","margin","textField","alignRight","textAlign","justifyContent","form","overflow","Edit","state","redirect","account","id","userName","password","loading","handleChange","name","event","target","value","setState","path","submit","validate","save","then","resp","catch","error","console","props","match","params","get","classes","renderLoading","renderRedirect","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from \"@material-ui/core/es/Button/Button\";\nimport accountsService from '../../Services/AccountsService';\nimport {Redirect} from \"react-router-dom\";\nimport OcbLoading from \"../Core/OcbLoading\";\nimport OcbSelect from \"../Core/OcbSelect\";\n\nconst styles = () => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width: \"100%\",\n        flexDirection: \"column\",\n        margin: \"auto\"\n    },\n    textField: {},\n    alignRight: {\n        textAlign: \"right\",\n        justifyContent: \"flex-end\"\n    },\n    form: {\n        overflow: \"visible\"\n    }\n});\n\nclass Edit extends React.Component {\n\n    state = {\n        redirect: false,\n        account: {\n            id: '',\n            userName: '',\n            password: ''\n        },\n        loading: false\n    };\n\n    componentDidMount() {\n        const id = this.props.match.params.id;\n        accountsService.get(id).then(account => {\n            account['id'] = id;\n            this.setState({\n                account: account\n            })\n        }).catch(error => {\n            console.error(error)\n        })\n    }\n\n    validate() {\n        return this.state.account.userName && this.state.account.password;\n    }\n\n    handleChange = name => event => {\n        let account = this.state.account;\n        account[name] = event.target.value;\n        this.setState({account: account});\n    };\n\n    redirect = (path) => {\n        this.setState({\n            redirect: path\n        })\n    }\n\n    submit = () => {\n        if (this.validate()) {\n            this.setState({\n                loading: true\n            });\n            accountsService.save(this.state.account).then(resp => {\n                this.redirect('/accounts')\n            }).catch(error => {\n                console.error(error)\n            }).then(() => {\n                this.setState({\n                    loading: false\n                });\n            })\n        }\n    }\n\n    renderRedirect() {\n        if (this.state.redirect !== false) {\n            return <Redirect to={this.state.redirect}/>\n        }\n    }\n\n    renderLoading() {\n        if (this.state.loading) {\n            return (\n                <OcbLoading/>\n            );\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                {this.renderLoading()}\n                {this.renderRedirect()}\n                <Card className={classes.form}>\n                    <CardHeader title=\"Cập Nhập Tài Khoản\"/>\n                    <CardContent>\n                        <form className={classes.container} noValidate autoComplete=\"off\">\n                            <TextField\n                                name=\"userName\"\n                                label=\"Tên đăng nhập\"\n                                placeholder=\"Nhâp tên đăng nhập...\"\n                                className={classes.textField}\n                                value={this.state.account.userName || ''}\n                                onChange={this.handleChange('userName')}\n                                margin=\"normal\"\n                            />\n                            <TextField\n                                name=\"password\"\n                                label=\"Mật khẩu\"\n                                placeholder=\"Nhập mật khẩu...\"\n                                className={classes.textField}\n                                value={this.state.account.password || ''}\n                                onChange={this.handleChange('password')}\n                                margin=\"normal\"\n                            />\n\n                            <OcbSelect label=\"Quyền hạn\" placeholder=\"Chọn quyền hạn...\"/>\n\n                        </form>\n                    </CardContent>\n                    <CardActions className={classes.alignRight}>\n                        <Button size=\"small\" color=\"primary\" href=\"/accounts\">\n                            Hủy\n                        </Button>\n                        <Button size=\"small\" color=\"primary\" onClick={this.submit}>\n                            Lưu\n                        </Button>\n                    </CardActions>\n                </Card>\n            </div>\n        );\n    }\n}\n\nEdit.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Edit);"]},"metadata":{},"sourceType":"module"}